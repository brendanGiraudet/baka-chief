@page "/recips/{Id}/{Action}"
@page "/recips/{Action}"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<h3>Recip form</h3>

<EditForm Model="RecipsState.Value.Item" OnValidSubmit="@SaveRecip">
    <DataAnnotationsValidator />

    @* Name *@
    <CustomInputText Label="Name" @bind-Value="@RecipsState.Value.Item.Name" />

    @* ImageUrl *@
    <CustomInputText Label="ImageUrl" @bind-Value="@RecipsState.Value.Item.ImageUrl" />

    @* PersonsNumber *@
    <CustomInputNumber Label="PersonsNumber" @bind-Value="@RecipsState.Value.Item.PersonsNumber" />

    @* Preparation *@
    <CustomInputTextArea Label="Preparation" @bind-Value="@RecipsState.Value.Item.Preparation" />
    
    @* RecipType *@
    <CustomInputSelect @bind-Value="@RecipsState.Value.Item.RecipTypeId" >
        @foreach(var recipType in RecipTypesState.Value.Items)
        {
            <option checked="@(RecipsState.Value.Item.RecipType?.Id == recipType.Id)" value="@recipType.Id">
                @recipType.Name
            </option>
        }
    
    </CustomInputSelect>

    <h4>Selected Ingredients</h4>
    <div>
        @if (RecipsState.Value.Item.RecipIngredients.Count() != 0)
        {
            @foreach (var recipIngredient in RecipsState.Value.Item.RecipIngredients)
            {
                <RecipIngredient CurrentRecipIngredient="@recipIngredient" Icon="@Enums.Icon.CrossSvg" Size="@Enums.Size.Small"
                    Style="@Enums.Style.Error" OnIconClickCallback="@(() => RemoveIngredient(recipIngredient))" />
            }
        }
        else
        {
            <div>No Ingredients selected</div>
        }
    </div>

    <h4>Ingredients</h4>
    <RecipIngredientSearch Icon="@Enums.Icon.PlusSvg" Size="@Enums.Size.Small" Style="@Enums.Style.Success"
        OnIconClickCallback="@((ingredient) => AddIngredient(ingredient))" RecipId="@RecipsState.Value.Item.Id" Take="@SearchConfiguration.DefaultNumberOfItemsToTakeInForm" ExceptedIngredientIds="@RecipsState.Value.Item.RecipIngredients?.Select(r => r.IngredientId)" />

    @* Submit *@
    <div>
        <Button Type="submit" Text="Submit" />
    </div>

</EditForm>

@if (CanDelete)
{
    <div>
        <Button Type="button" Text="Remove" OnClickCallback="@(async () => await RemoveRecip())" />
    </div>
}

<div>
    <Button Type="button" Text="Return" OnClickCallback="@(async () => await RedirectToRecipsPage())" />
</div>