@page "/recips/{Id}/details"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div>
    <Button Type="button" Text="Return" OnClickCallback="@(async () => await RedirectToRecipsPage())" />
</div>

<div>
    <Button Type="button" Text="Update" OnClickCallback="@(async () => await RedirectToRecipForm(Id))" />
</div>

<h3>Recip details</h3>

<div>
    @* Name *@
    <div class="recip-name">
        <span>@RecipsState.Value.Recip.Name</span>
    </div>

    @* ImageUrl *@
    <div class="recip-image">
        <img src="@RecipsState.Value.Recip.ImageUrl" alt="@RecipsState.Value.Recip.Name" />
    </div>

    @* PersonsNumber *@
    <div class="recip-person">
        <Icon IconSvgEnum="@Enums.Icon.Person" IconSize="@Enums.Size.Small" IconStyle="@Enums.Style.Secondary" />
        <span>@RecipsState.Value.Recip.PersonsNumber</span>
    </div>



    @* Recip Type *@
    <div class="recip-ingredient-row">
        <span>Recip Type :</span>
        <span>@RecipsState.Value.Recip?.RecipType?.Name</span>
    </div>
</div>

<h4>Ingredients</h4>
<div class="ingredients">
    @if (RecipsState.Value.Recip.RecipIngredients?.Count() != 0)
    {
        @foreach (var recipIngredient in RecipsState.Value.Recip.RecipIngredients)
        {
            <CardWithImage  OnClickCallback="@(() => RedirectToIngredientDetails(recipIngredient.Ingredient.Id))" Title="@recipIngredient.Ingredient.Name" ImageUrl="@recipIngredient.Ingredient.ImageUrl" ImageSize="@Enums.Size.Small" />
        }
    }
    else
    {
        <div>No Ingredients</div>
    }
</div>

<h4>Preparation</h4>
@* Preparation *@
<div class="recip-ingredient-row">
    <span>@RecipsState.Value.Recip.Preparation</span>
</div>