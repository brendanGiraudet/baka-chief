@page "/ingredients/{Action}/{Id}"
@page "/ingredients/{Action}"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<h3>Ingredient form</h3>

<EditForm Model="IngredientsState.Value.Ingredient" OnValidSubmit="@SaveIngredient">
    <DataAnnotationsValidator />

    @* Name *@
    <CustomInputText Label="Name" @bind-Value="@IngredientsState.Value.Ingredient.Name" />

    @* ImageUrl *@
    <CustomInputText Label="ImageUrl" @bind-Value="@IngredientsState.Value.Ingredient.ImageUrl" />

    @* KcalNumber *@
    <CustomInputNumber Label="KcalNumber" @bind-Value="@IngredientsState.Value.Ingredient.KcalNumber" />

    <h4>Selected Nutriments</h4>
    <div>
        @if (IngredientsState.Value.Ingredient.IngredientNutriments.Count() != 0)
        {
            @foreach (var ingredientNutriment in IngredientsState.Value.Ingredient.IngredientNutriments)
            {
                <Tag Content="@ingredientNutriment.Nutriment.Name" Icon="@Enums.Icon.CrossSvg" Size="@Enums.Size.Small" Style="@Enums.Style.Error"
                    OnClickCallback="@(() => RemoveNutriment(ingredientNutriment.Nutriment))" />
            }
        }
        else
        {
            <div>No Nutriments selected</div>
        }
    </div>

    <h4>Nutriments</h4>
    <NutrimentsSearch Icon="@Enums.Icon.PlusSvg" Size="@Enums.Size.Small" Style="@Enums.Style.Success"
        OnTagClickCallback="@((nutriment) => AddNutriment(nutriment))" />

    @* Submit *@
    <div>
        <Button Type="submit" Text="Submit" />
    </div>

</EditForm>

@if (CanDelete)
{
    <Button Type="button" Text="Remove" OnClickCallback="@(async () => await RemoveIngredient())" />
}

<Button Type="button" Text="Return" OnClickCallback="@(async () => await RedirectToIngredientsPage())" />